# -*- coding: utf-8 -*-
"""Network Bandwidth Monitor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zgdm4LNQo9MRfV5dBtJvGaOXDQfDg9WC
"""

import psutil
import time
import csv
from datetime import datetime

def get_network_stats():
    stats = psutil.net_io_counters()
    return stats.bytes_sent, stats.bytes_recv

def log_network_stats(filename, timestamp, upload_speed, download_speed, total_upload, total_download):
    with open(filename, mode='a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([timestamp, upload_speed, download_speed, total_upload, total_download])

def monitor_network_usage(interval=1, log_file='network_usage.csv', duration=60):
    try:
        with open(log_file, mode='x', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(["Timestamp", "Upload Speed (Bytes/s)", "Download Speed (Bytes/s)", "Total Upload (Bytes)", "Total Download (Bytes)"])
    except FileExistsError:
        pass

    prev_sent, prev_recv = get_network_stats()
    prev_time = time.time()

    total_sent, total_recv = prev_sent, prev_recv

    print("Monitoring network usage...")

    for _ in range(int(duration / interval)):
        time.sleep(interval)

        curr_sent, curr_recv = get_network_stats()

        upload_speed = (curr_sent - prev_sent) / interval
        download_speed = (curr_recv - prev_recv) / interval

        total_sent = curr_sent
        total_recv = curr_recv

        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        log_network_stats(log_file, timestamp, upload_speed, download_speed, total_sent, total_recv)

        print(f"{timestamp} | Upload Speed: {upload_speed:.2f} B/s | Download Speed: {download_speed:.2f} B/s | Total Upload: {total_sent / (1024 ** 2):.2f} MB | Total Download: {total_recv / (1024 ** 2):.2f} MB")

        prev_sent, prev_recv = curr_sent, curr_recv

if __name__ == "__main__":
    monitor_network_usage(interval=1, log_file='network_usage.csv', duration=60)

